# Generated by Django 4.2.4 on 2023-09-09 21:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('restaurants', '0004_restaurant_owner'),
    ]

    operations = [
        migrations.CreateModel(
            name='TasteTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taste_tags', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'db_table': 'TasteTags',
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('itemID', models.AutoField(primary_key=True, serialize=False)),
                ('item_name', models.CharField(max_length=100)),
                ('food_type', models.CharField(choices=[('Appetizer', 'Appetizer'), ('Dessert', 'Dessert'), ('Main Course', 'Main Course'), ('Beverage', 'Beverage')], max_length=20)),
                ('average_rating', models.DecimalField(decimal_places=2, max_digits=3)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('calories', models.PositiveIntegerField()),
                ('ingredients', models.TextField()),
                ('cooking_style', models.CharField(choices=[('Baked', 'Baked'), ('Grilled', 'Grilled'), ('Fried', 'Fried')], max_length=20)),
                ('time_of_day_available', models.CharField(choices=[('Breakfast', 'Breakfast'), ('Lunch', 'Lunch'), ('Dinner', 'Dinner'), ('Anytime', 'Anytime')], max_length=20)),
                ('specialty_item', models.BooleanField(default=False)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_items', to='restaurants.restaurant')),
                ('taste_tags', models.ManyToManyField(blank=True, to='restaurants.tastetag')),
            ],
            options={
                'db_table': 'MenuItems',
            },
        ),
    ]
