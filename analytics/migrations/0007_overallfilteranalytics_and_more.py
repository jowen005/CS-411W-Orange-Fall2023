# Generated by Django 4.2.4 on 2023-12-02 01:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('restaurants', '0011_menuitem_number_of_rating'),
        ('analytics', '0006_localrestaurantanalytics'),
    ]

    operations = [
        migrations.CreateModel(
            name='OverallFilterAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter_type', models.CharField(choices=[('calories', 'calories'), ('cookstyletag', 'cookstyletag'), ('allergytag', 'allergytag'), ('ingredienttag', 'ingredienttag'), ('restrictiontag', 'restrictiontag'), ('tastetag', 'tastetag')], max_length=20)),
                ('top_3_inclusions', models.JSONField()),
                ('top_3_added', models.JSONField()),
                ('top_3_exclusions', models.JSONField(null=True)),
                ('date_stamp', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'OverallFilterAnalytics',
            },
        ),
        migrations.RemoveField(
            model_name='menuitemperformanceanalytics',
            name='number_of_added_to_bookmark',
        ),
        migrations.AddField(
            model_name='allergiestaganalytics',
            name='exclusion_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='ingredienttaganalytics',
            name='exclusion_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='menuitemperformanceanalytics',
            name='exclusion_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='menuitemperformanceanalytics',
            name='top_3_allergy',
            field=models.JSONField(null=True),
        ),
        migrations.AddField(
            model_name='menuitemperformanceanalytics',
            name='top_3_ingredients',
            field=models.JSONField(null=True),
        ),
        migrations.AddField(
            model_name='menuitemperformanceanalytics',
            name='top_3_restrictions',
            field=models.JSONField(null=True),
        ),
        migrations.AddField(
            model_name='menuitemperformanceanalytics',
            name='top_3_taste',
            field=models.JSONField(null=True),
        ),
        migrations.AddField(
            model_name='restrictiontaganalytics',
            name='exclusion_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='tastetaganalytics',
            name='exclusion_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.CreateModel(
            name='TasteTagExclusionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exclusion_count', models.PositiveIntegerField(default=0)),
                ('date_stamp', models.DateTimeField()),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurants.menuitem')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurants.tastetag')),
            ],
            options={
                'db_table': 'TasteTagExclusionRecord',
            },
        ),
        migrations.CreateModel(
            name='RestrictionTagExclusionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exclusion_count', models.PositiveIntegerField(default=0)),
                ('date_stamp', models.DateTimeField()),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurants.menuitem')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurants.restrictiontag')),
            ],
            options={
                'db_table': 'RestrictionTagExclusionRecord',
            },
        ),
        migrations.CreateModel(
            name='OverallExclusionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exclusion_count', models.PositiveIntegerField(default=0)),
                ('date_stamp', models.DateTimeField()),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurants.menuitem')),
            ],
            options={
                'db_table': 'OverallExclusionRecord',
            },
        ),
        migrations.CreateModel(
            name='IngredientTagExclusionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exclusion_count', models.PositiveIntegerField(default=0)),
                ('date_stamp', models.DateTimeField()),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurants.menuitem')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurants.ingredienttag')),
            ],
            options={
                'db_table': 'IngredientTagExclusionRecord',
            },
        ),
        migrations.CreateModel(
            name='AllergyTagExclusionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exclusion_count', models.PositiveIntegerField(default=0)),
                ('date_stamp', models.DateTimeField()),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurants.menuitem')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurants.allergytag')),
            ],
            options={
                'db_table': 'AllergyTagExclusionRecord',
            },
        ),
    ]
